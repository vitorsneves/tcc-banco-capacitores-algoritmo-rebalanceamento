import balanceamento from "./balanceamento.js";

let permutacoesMaximas = 100;

let pontes = [
  [
    [
      [28.9e-6, 28.8e-6],
      [28.9e-6, 28.8e-6],
      [28.8e-6, 28.8e-6],
      [29.0e-6, 28.7e-6],
      [28.9e-6, 28.7e-6],
    ],
    [
      [28.8e-6, 28.8e-6],
      [28.9e-6, 28.7e-6],
      [28.2e-6, 28.8e-6],
      [29.0e-6, 28.7e-6],
      [29.0e-6, 28.6e-6],
    ],
    [
      [28.8e-6, 28.8e-6],
      [28.9e-6, 28.8e-6],
      [28.8e-6, 28.8e-6],
      [29.0e-6, 28.7e-6],
      [29.0e-6, 28.7e-6],
    ],
    [
      [28.7e-6, 28.8e-6],
      [28.9e-6, 28.8e-6],
      [28.7e-6, 28.8e-6],
      [29.1e-6, 28.6e-6],
      [27.5e-6, 28.8e-6],
    ],
  ],
  [
    [
      [29.1e-6, 28.4e-6],
      [28.9e-6, 28.7e-6],
      [28.8e-6, 28.8e-6],
      [27.4e-6, 28.7e-6],
      [29.0e-6, 28.7e-6],
    ],
    [
      [28.8e-6, 28.8e-6],
      [28.8e-6, 28.8e-6],
      [28.9e-6, 28.7e-6],
      [29.0e-6, 28.7e-6],
      [29.0e-6, 28.6e-6],
    ],
    [
      [28.9e-6, 28.7e-6],
      [28.9e-6, 28.8e-6],
      [28.9e-6, 28.7e-6],
      [29.0e-6, 28.7e-6],
      [28.9e-6, 28.5e-6],
    ],
    [
      [28.8e-6, 28.8e-6],
      [28.8e-6, 28.8e-6],
      [28.9e-6, 28.7e-6],
      [29.1e-6, 28.6e-6],
      [29.1e-6, 28.6e-6],
    ],
  ],
  [
    [
      [28.8e-6, 28.7e-6],
      [28.8e-6, 28.7e-6],
      [28.9e-6, 28.6e-6],
      [28.3e-6, 28.5e-6],
      [29.1e-6, 28.6e-6],
    ],
    [
      [28.8e-6, 28.8e-6],
      [27.3e-6, 28.7e-6],
      [29.0e-6, 28.7e-6],
      [29.0e-6, 28.6e-6],
      [29.1e-6, 28.7e-6],
    ],
    [
      [28.9e-6, 28.8e-6],
      [28.9e-6, 28.6e-6],
      [28.9e-6, 28.7e-6],
      [29.0e-6, 28.6e-6],
      [28.7e-6, 28.6e-6],
    ],
    [
      [27.9e-6, 28.8e-6],
      [28.6e-6, 28.6e-6],
      [28.9e-6, 29.0e-6],
      [29.0e-6, 28.6e-6],
      [29.1e-6, 28.6e-6],
    ],
  ],
];

const balanceador = balanceamento("trifasico");

let permutacoes = 0;
let trocas = [];

let passo;

do {
  passo = balanceador(pontes);

  pontes = passo.pontes;
  if (!passo.coordenadas) break;

  trocas.push([...passo.coordenadas, ...passo.correntes]);

  permutacoes++;
} while (passo.coordenadas && permutacoes < permutacoesMaximas);

console.log(trocas);
